vim.git해서 lib밑에거 아예 뺐자낳ㅎㅎㅎㅎㅎㅎ

사실 교수님이 뭔 말 하눈자 모르겠오
쓰는 자리를 쓰는게 좋겠져 왜냐면 계속 동기화시킬거니까

turtle프로그램 어디다 저장했니 

컴파일이 뭐니 아무것도 ㅗㅁ르겠다 

리눅스에서는 구분하는거 /고 윈도우는 \야 ㅎㅎㅎㅎㅎㅎㅎ

cmd에서 어똫개 하냐면 
cd Documents/ked/code/j16/myrepo
dir
java -cp classes;lib/aplu5.jar com.sd.turtle.TurtleDemoMain
-> 거북이 움직이는거 나옴

0314오늘은 2 intro dp.ipynb에 들어가자
좋은 소프트웨어가 뭐지
 -> 사람중심의 소프트웨어 컴퓨터가 해석하기 좋거나 빠른 프로그래밍이 아니고 사람이 이해하기 좋고 사람이 고치기 좋은 소프트웨어

1장에 나와있는 duck  이랑 정렬하는 프로그램 할거야 
이 과목에선 공부해야 될게 이 세가지 질문 !! 넹 설명 잘들을게요
이 세가지를 항상 머리에 떠올려야돼 

1. Smell 냄새가 나나???ㅇㅅㅇ 날까? ㅇㅅㅇ 내가 그냥 smell쓴거 같애? 자바에서 문제가 되는 부분을 냄새가 난다고 한다. 전공하는 사람들이 이렇게 말해
   냄새 나는데 그냥 두니?? 냄새가 나면 안되지 
2. 해결 -> 여러대안이 있어

3. 좋아졌는지?


소스코드를 만들었는데 집에가야돼 한시간 만에 못가 ㅠㅠ 태양의 후예 봐야되는데 ㅠㅠ 그 문제를 해결해야지 
첫째 택시를 타고간다 이걸로 정했다 문제는 해결됐어 태양의 휴예를 본다는것 근데 돈이 많이 나갓어 ㅠㅠ
그래서 돈이 안나가게 하고싶어 그럼 디엠비로 보는걸로 할까??해해햏헤헤헤 구러면 돈이 안빠져나갔네 대중교통으로 가도돼

이 삼단계에 따라 설계해서 프로그래밍을 하는거 그방법으로서 디자인 패턴을 배우는것이야
SW crisis 어디서 나온건가?? 시험에 잘나와
1968년 나토 학회에서 처음 등장 이거는 이 그래프를 떠올려 내가 공책에 그렸뎡
소프트웨어 잘만들려면 품질을 이야기해야돼 우리가 건물을 짓는데 방이 하나 없어 화가나 방은 있어 근데 이사날짜를 못맞춰 화가나 이사날짜까지 맞췄는데 비용이 많이들었어 화가나
집을 잘짓는 문제뿐만아니라 날짜 이런것들도 중요함 
ISO9126외워나  정해진 시간에 정해진 비용으로 정해진 기능을 다 하는가

SW 심각성 
대기업 프로그램을 혼자서 만들수도 없으니까 문제가 되는거야 그러니까 협업의 문제가 생김 소프트웨어는 반드시 협업을 해야돼 나눠서 통합한다.
심각한 이유 -> 눈에 안 보여서 ㅠㅠ 눈에 안띄니까 ㅠㅠ

좋은 소프트웨어???
그럼 예를 들어 좋은 차는 무엇인가?? 연비 디자인 < 가격 ㅎㅎ  
키워드가 두개 faster, better
좋은 소프트웨어란 기능성 효율성 뿐만 아니라 유지보수성 재사용성 가독성 등이 중요하다 -> 중요한 문장
소프트웨어의 수명을 짧게하는이유는 중복 ㅠㅠ 처음 알았덩 중복되면 고치기가 매우 어려워

좋은 소프트웨어는 문제가 뭐어지?? 어떻게 해결하지??? 뭐가 좋아지지???

소프트웨어를 만들건데 '좋은' 이라는 것을 판단할수 있는 기준이 있어야돼

객체지향으로 왜 갔는지?? 소프트웨어와 하드웨어가 만나는 지점부터 생겨난것이 객체지향
객체지향을 쓰면 빠르게 많은 작업을 할수있다는거야 그러면 객체지향은 과연 그런 도구일까? 그렇지 않을수도ㅗ있어 .. 그런 도구가 되면 잘써야된다
객체지향을 잘 쓰는 사람이 거의 없어 어려우니까 제일 어려운 개념이 상속이야 어느 정도 이해했니? 상속만 잘쓰면 객체지향 짱되는고야
상속을 언제 사용하는지 언제 사용해서는 안되는지를 잘 알아야돼 그 얘기를 해보자
우리는 객체지향을 쓰면 이 구절을 떠올려야돼 네모가 있어 얘가 학생이야 고등학생 대학생 다 달라 뭔가 달라지기 시작하쟈나 그럼 상속을 이렇ㅎ게 쓰자 
상속이 늘 옳은건 아니야 
overriding vs overloading
다형성 넘나 중요한것...ㅎㅎ 상속을 쓰는 이유는 다형성 때문  상속으 ㅣ다형성을 잘 쓰면 객체지향을 잘 할수 있어
다형성을 간단 히 설명하고 프로그래밍 해보자
컴파일 하는 시점은 >? javac하는 시점
다형적 : 컴파일 시점에는 슈퍼클래스, 런타임에는 섭클래스를 쓴다.